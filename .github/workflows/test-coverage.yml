name: Reusable workflow for JASP code coverage

on:
  workflow_call:
    inputs:
      needs_JAGS:
        description: 'Should JAGS be available?'
        required: false
        type: boolean
        default: false
      continue_on_schedule:
        description: 'Should the workflow also be run on a schedule? By default (false), this only happens when the github.repository_owner is jasp-stats.'
        type: boolean
        default: false

jobs:
  scheduled-run-check:

    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.check.outputs.status }}

    steps:
    - id: check
      name: Check for a scheduled run
      run: |
        if [ ${{ inputs.continue_on_schedule == 'true' || github.event_name != 'schedule' || github.repository_owner != 'jasp-stats' }} ]; then
          echo "::set-output name=status::success"
        else
          echo "::set-output name=status::error"
        fi
      shell: bash

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

  coverage:

    needs: scheduled-run-check
    if: needs.scheduled-run-check.outputs.status == 'success'

    runs-on: ubuntu-latest

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      R_REMOTES_UPGRADE: never
      VDIFFR_RUN_TESTS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      _R_CHECK_LENGTH_1_CONDITION_: TRUE #deprecated from R 4.2.0
      _R_CHECK_MATRIX_DATA_: TRUE # only works from R 4.2.0 onwards

    steps:
      - uses: actions/checkout@v5

      - name: Install system dependencies on linux
        if: runner.os == 'Linux'
        run: |
          # ragg                                          requires libharfbuzz-dev libfribidi-dev
          # credentials   (dependency of usethis)         requires libgit2-dev
          # curl          (dependency of usethis)         requires libcurl4-openssl-dev
          # libicu   (dependency of igraph or stringi...) requires libicu libicu-dev

          sudo apt install libharfbuzz-dev libfribidi-dev libgit2-dev libcurl4-openssl-dev libicu*
        shell: bash

      - uses: r-lib/actions/setup-r@v2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::covr
            github::jasp-stats/jaspTools
          needs: check
          cache-version: 0

      - name: Install JAGS on Linux
        if: runner.os == 'Linux' && inputs.needs_JAGS
        run: sudo apt install jags
        shell: bash

      - name: Setup jaspTools
        run: |
          jaspTools::setupJaspTools()
        shell: Rscript {0}

      - name: Test coverage
        run: |
          cov <- covr::package_coverage(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(normalizePath(Sys.getenv("RUNNER_TEMP"), winslash = "/"), "package")
          )
          print(cov)
          covr::to_cobertura(cov)
        shell: Rscript {0}

      - uses: codecov/codecov-action@v5
        with:
          # Fail if error if not on PR, or if on PR and token is given
          fail_ci_if_error: ${{ github.event_name != 'pull_request' || secrets.CODECOV_TOKEN }}
          files: ./cobertura.xml
          plugins: noop
          disable_search: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find '${{ runner.temp }}/package' -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
