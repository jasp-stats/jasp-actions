name: 'Set up test environment for JASP unit tests'
description: 'Downloads and installs R packages and system dependencies.'
inputs:
  requiresJAGS:
    description: 'Should JAGS be available?'
    required: true
    default: false

runs:
  using: "composite"
  steps:

# TODO (27-11-2020)
# Composite steps don't allow if statements yet but will in the future (see https://github.com/actions/runner/blob/main/docs/adrs/0549-composite-run-steps.md#if-condition)
# Once those are supported, we should probably use those instead of having if statements in bash & R. They're still commented out at the moment.
#

    - name: Install system dependencies on macOS
      # if: runner.os == 'macOS'
      run: |
        if [ "${{ runner.os }}" = 'macOS' ]; then
          brew install --cask xquartz
        fi
      shell: bash

    - name: Clone jasp-required-files on windows
      run: |
        if [ "${{ inputs.requiresJAGS }}" = 'true' ] && [ "${{ runner.os }}" = 'Windows' ]; then
          branch='Windows'
          echo "branch=$branch"
          git clone --branch=$branch https://github.com/jasp-stats/jasp-required-files.git pkgs

          # set JAGS_ROOT environment variable required for compiling JAGS_MODULES
          jags_root=$(readlink -f pkgs/64/JAGS)
          echo "jags_root = $jags_root"
          echo "JAGS_ROOT=$jags_root" >> $GITHUB_ENV
        fi
      working-directory: ..
      shell: bash

    - name: Install JAGS on macOS
      # if: inputs.requiresJAGS && runner.os == 'macOS'
      run: |
        if [ "${{ inputs.requiresJAGS }}" = 'true' ] && [ "${{ runner.os }}" = 'macOS' ]; then
          brew install jags
        fi
      shell: bash

    - name: Install system dependencies on linux
      run: |
        if [ "${{ runner.os }}" = 'Linux' ]; then
          
          # ragg                                          requires libharfbuzz-dev libfribidi-dev 
          # credentials   (dependency of usethis)         requires libgit2-dev
          # curl          (dependency of usethis)         requires libcurl4-openssl-dev
          
          sudo apt install libharfbuzz-dev libfribidi-dev libgit2-dev libcurl4-openssl-dev
          
          if [ "${{ inputs.requiresJAGS }}" = 'true' ]; then
            sudo apt install jags
          fi
        fi
      shell: bash

    - name: Set repository for binaries on Ubuntu
      run : |
        if ("${{ runner.os }}" == "Linux") {
          # repos from https://github.com/r-lib/actions/tree/master/examples#standard-ci-workflow
          cat('\noptions("repos" = "https://packagemanager.rstudio.com/cran/__linux__/focal/latest")\n', 
              file = "~/.Rprofile", sep = "", append = TRUE)
        }
      shell: Rscript {0}

    - name: Locate JAGS on Windows
      # if: inputs.requiresJAGS && runner.os == 'Windows'
      run: |
        if (.Platform$OS.type == "windows" && "${{ inputs.requiresJAGS }}" == "true") {
          path <- normalizePath(file.path("..", "pkgs", "64", "JAGS"), winslash = "/")
          cat("\nSys.setenv(JAGS_HOME = '", path, "')\n", file = "~/.Rprofile", sep = "", append = TRUE)
        }
      shell: Rscript {0}

    - name: Set environment variable to never compile packages on Windows and macOS
      run: |
        if ("${{ runner.os }}" != "Linux") {
          # don't try to install new pkgs versions from source (which often requires additional system dependencies which, when missing, lead to errors, e.g., ragg).
          cat("\noptions(install.packages.compile.from.source = \"never\")\n", file = "~/.Rprofile", sep = "", append = TRUE)
        }
      shell: Rscript {0}

    - name: Setup jaspTools
      run: |
        install.packages("remotes")
        install.packages("ragg")
        remotes::install_github("jasp-stats/jaspTools")
        jaspTools::setupJaspTools()
      shell: Rscript {0}
